Задача про тестирование памяти разными способами.
Проект снова написан на C#.
Для запуска нужно открыть в Visual Studio версии не ниже 2010 файл Lasttask.sln, или просто открывать exe-ки.
Если просто открывать exe-ки, то лучше делать это из консоли, т.к. они закрываются после окончания, не ждут ввода.

Первое задание про потоки vs процессы:

Состоит из нескольких проектов:
1_Multiple_Common - проект, содержащий процедуру дял тестирования из первого задания
1_Multiple_Main - главный проект по первой задаче, его и нужно запускать
1_Multiple_Process - проект с единичным запуском процедуры для тестирования, для того, чтобы процедуру можно было запускать в нескольких потоках

Итог: вариант с потоками выполняется медленнее. Причина - потоки делят общую память, а процессам не нужно ничем делиться.


Второе задание про страницы и подкачку:

Состоит из одного проекта - 2_Pages.
Итог: произвольная запись работает медленнее, чем последовательная, потому что постоянно приходится подгружать новые страницы.


Третье задание про ложное разделение:

Состоит из одного проекта - 3_TheCakeIsALie.
Итог: счетчики, который расположены дальше друг от друга, работают в пару раз быстрее.
Причина - далекие ячейки памяти попадают в разные строчки кеша.


Четвертое задание про матрицы:

Состоит из одного проекта - 4_Matrix.
Итог: матрица, хранимая блоками должна работать быстрее.
Это потому, что проход по столбцу не каждый раз требует другую строку кеша (т.к. строки матрицы длинные), а часто попадает в тот же блок.
Однако на практике этого добиться довольно сложно, т.к. нужно правильно подгадать размеры матрицы и блока.
Также в этом случае немного замедляется проход по строке, т.к. начинают происходить переходы между блоками.
Ещё сложность - рассчет координат в массиве сложнее для блочного варианта => увеличивается его временная сложность.
Несколько раз я смог добиться меньшего времени работы для блочного варианта, но это нетривиальная оптимизация, конечно.